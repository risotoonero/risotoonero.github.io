<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>9.30关于排序和分治之题</title>
    <url>/2021/09/30/9-30%E5%85%B3%E4%BA%8E%E6%8E%92%E5%BA%8F%E5%92%8C%E5%88%86%E6%B2%BB%E4%B9%8B%E9%A2%98/</url>
    <content><![CDATA[<h1 id="leetcode算法面试题排序与索引"><a href="#leetcode算法面试题排序与索引" class="headerlink" title="leetcode算法面试题排序与索引"></a>leetcode算法面试题排序与索引</h1><h2 id="最大数"><a href="#最大数" class="headerlink" title="最大数"></a>最大数</h2><p>把数字转化为字符串，把两个字符串拼接起来，用字符串来进行比较和排序</p>
<span id="more"></span>

<h2 id="摆动排序"><a href="#摆动排序" class="headerlink" title="摆动排序"></a>摆动排序</h2><p>用快排排好后，逆序穿插，把第一大，第二大插到数组第1位，第3位，插到末尾就把剩下逆序插到第0位，第2位，保证摆动。至于为什么这样可以保证搞不懂。</p>
<h2 id="寻找重复数"><a href="#寻找重复数" class="headerlink" title="寻找重复数"></a>寻找重复数</h2><p>忽略了题目的一个条件，所有数都在1到n之间。所以二分法查询的不是位置，而是1-n的数。比这个数小的，不能大于这个数，因为要没有重复。如果大过了，就证明在0-这个数之间有数重复，所以在这个区间上找。如果没有重复的话，就在n-len这个区间上找。</p>
<p>如果寻找的是不重复数，可以直接用位运算，一个数与0异或等于它本身，两个相同数异或等于0。</p>
<h2 id="寻找峰值"><a href="#寻找峰值" class="headerlink" title="寻找峰值"></a>寻找峰值</h2><p>看不透问题的本质，直接用这个数是否大于左边，是否大于右边来算，用二分法不能判断最大数在哪个区间，只能左边区间和右边区间同样递归，时间复杂度反而是指数了，而且边界条件根本判断不了。其实普通的二分法，要求最大数，只要右边这个数不能大于它就行了。大于它的话说明还有数比它大，所以右边区间一定有最大数，不用管左边区间有没有最大数。否则这个数也许是最大数，就在左边找。真的为自己的智商堪忧。</p>
<h1 id="算法实验课"><a href="#算法实验课" class="headerlink" title="算法实验课"></a>算法实验课</h1><h2 id="两个有序序列的中位数-分治"><a href="#两个有序序列的中位数-分治" class="headerlink" title="两个有序序列的中位数(分治)"></a>两个有序序列的中位数(分治)</h2><p>时间复杂度为log(n)，首先基本思想因为两个数组已经排好，而且求中位数，所以比较两个数组的中间元素，要是相等，则因为都是中位数，这两个数一定挨在一起，则整体的中位数必定是这个数，所以直接返回这个数。具体看下图</p>
<p><img src="/2021/09/30/9-30%E5%85%B3%E4%BA%8E%E6%8E%92%E5%BA%8F%E5%92%8C%E5%88%86%E6%B2%BB%E4%B9%8B%E9%A2%98/te.jpg"></p>
<p>所以基本思路就是这样。为了保证递归的时候两个子数组长度相等，对mid可以这样处理</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">mid1=(la+ua)/<span class="number">2</span>;</span><br><span class="line">mid2=(lb+ub+<span class="number">1</span>)/<span class="number">2</span>;</span><br></pre></td></tr></table></figure>

<p>这样的意思是若出现一个偶数组一个奇数组，得到的中间位置一样。</p>
<p>因为保证两数组长度一样，会出现数组只有两个的情况，如果按上面的方法会出现</p>
<p><img src="/2021/09/30/9-30%E5%85%B3%E4%BA%8E%E6%8E%92%E5%BA%8F%E5%92%8C%E5%88%86%E6%B2%BB%E4%B9%8B%E9%A2%98/test.jpg"></p>
<p>造成死循环。所以进行处理</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">mid1=(la+ua)/<span class="number">2</span>;</span><br><span class="line">mid2=(lb+ub)/<span class="number">2</span>;</span><br></pre></td></tr></table></figure>

<p>这样处理的都是0位置元素</p>
<p>递归终止条件</p>
<p>当两个数组都只有一个元素的时候，中位数肯定就是小的那一个。</p>
<p>经过上述两个元素数组的处理，会出现一种类型的情况，a数组有1个元素，b数组有2个元素，意味着a的元素大于b的第一个元素，按中位数的定义，比较b的第二个元素和a，小的那个就是中位数。同理a,b调换。</p>
<p>完整代码如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100005</span>];</span><br><span class="line"><span class="keyword">int</span> b[<span class="number">100005</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">binary</span><span class="params">(<span class="keyword">int</span> la,<span class="keyword">int</span> ua,<span class="keyword">int</span> lb,<span class="keyword">int</span> ub)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> mid1=(la+ua)/<span class="number">2</span>,mid2=(lb+ub+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">	<span class="keyword">if</span>(la==ua&amp;&amp;lb!=ub)&#123;</span><br><span class="line">		<span class="keyword">if</span>(a[la]&gt;b[ub])&#123;</span><br><span class="line">			<span class="keyword">return</span> b[ub];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> a[la];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(la!=ua&amp;&amp;lb==ub)&#123;</span><br><span class="line">		<span class="keyword">if</span>(a[ua]&lt;b[ub])&#123;</span><br><span class="line">			<span class="keyword">return</span> a[ua];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> b[ub];</span><br><span class="line">	&#125;	</span><br><span class="line">	<span class="keyword">if</span>(la==ua&amp;&amp;lb==ub)&#123;</span><br><span class="line">		<span class="keyword">if</span>(a[la]&gt;b[lb])&#123;</span><br><span class="line">			<span class="keyword">return</span> b[lb];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> a[la];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(la+<span class="number">1</span>==ua&amp;&amp;lb+<span class="number">1</span>==ub)&#123;</span><br><span class="line">			mid1=(la+ua)/<span class="number">2</span>;</span><br><span class="line">			mid2=(lb+ub)/<span class="number">2</span>;</span><br><span class="line">		&#125; </span><br><span class="line">		<span class="keyword">if</span>(a[mid1]==b[mid2])&#123;</span><br><span class="line">			<span class="keyword">return</span> a[mid1];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(a[mid1]&lt;b[mid2])&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="built_in">binary</span>(mid1,ua,lb,mid2);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(a[mid1]&gt;b[mid2])&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="built_in">binary</span>(la,mid1,mid2,ub);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n;</span><br><span class="line">	cin&gt;&gt;n;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">		cin&gt;&gt;a[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">		cin&gt;&gt;b[i];</span><br><span class="line">	&#125;</span><br><span class="line">	cout&lt;&lt;<span class="built_in">binary</span>(<span class="number">0</span>,n<span class="number">-1</span>,<span class="number">0</span>,n<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>算法心得</tag>
      </tags>
  </entry>
  <entry>
    <title>DS-ch6</title>
    <url>/2021/05/23/DS-ch6/</url>
    <content><![CDATA[<h1 id="DS-ch6"><a href="#DS-ch6" class="headerlink" title="DS-ch6"></a>DS-ch6</h1><p>图论的算法包括</p>
<ul>
<li>图的存储方式</li>
<li>邻接矩阵</li>
<li>邻接表</li>
<li>图的遍历</li>
<li>深度优先搜索（dfs）</li>
<li>广度优先搜索（bfs）</li>
<li><span id="more"></span></li>
<li>图的应用</li>
<li>最小生成树</li>
<li>普利姆算法（从一棵小树长大）</li>
<li>克鲁斯卡尔算法（选择最小边）</li>
<li>最短路径</li>
<li>迪杰斯特拉算法（单源最短路）</li>
<li>弗洛伊德算法（多源最短路）</li>
</ul>
<h2 id="L3天梯赛——地铁一日游"><a href="#L3天梯赛——地铁一日游" class="headerlink" title="L3天梯赛——地铁一日游"></a>L3天梯赛——地铁一日游</h2><p>这道题看题解看了一上午才终于似懂非懂，由于魔都的地铁路线是以两点的最短路计费，所以当然要求最短路径，并且是多源有权图的最短路径，所以用弗洛伊德算法。这个森森，他要选择相同计费前提下距离最远的站点或者线路末端拍照，所以需要一个map，记录相同费用下的最大距离(map[‘一个费用’]=’最大距离’)，当出发点到这个结点(mp [i] [j])的距离是等于这个最大距离的时候，或者此结点本身是线路末端的时候，把它放进一个vector（res）保存，方便dfs的时候遍历标记，需要注意，当他出去站点的时候，他还可以再进来，再重新选择相同费用的最大距离的站点，所以用dfs。</p>
<p>思路如下：</p>
<p>对于每个结点创建一个结构体保存它在每个相同费用下能够达到的结点，ends表示它是否为末端，visit表示现在是由哪个结点出发</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">station</span>&#123;</span>    </span><br><span class="line">	<span class="keyword">int</span> visit,ends;    </span><br><span class="line">	<span class="built_in">station</span>()&#123;        </span><br><span class="line">		visit=ends=<span class="number">0</span>;    </span><br><span class="line">	&#125;    </span><br><span class="line">	vector&lt;<span class="keyword">int</span>&gt; res;*<span class="comment">//所有可到达的站* </span></span><br><span class="line">&#125;sta[MAX];</span><br></pre></td></tr></table></figure>

<p>mp [i] [j]存放从i到j的最短路径，初始化时有边相连则赋值权重，无边的时候则赋最大值。之后用弗洛伊德算法的三重循环使mp[i] [j]存的是最短路</p>
<figure class="highlight plaintext"><figcaption><span>floyed()&#123;//Floyed求最短路径</span></figcaption><table><tr><td class="code"><pre><span class="line">void floyed()&#123;//Floyed求最短路径    </span><br><span class="line">    for(int k=1;k&lt;=n;k++)&#123;</span><br><span class="line">        for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">            for(int j=1;j&lt;=n;j++)&#123;</span><br><span class="line">                if(i!=j&amp;&amp;mp[i][j]&gt;mp[i][k]+mp[k][j])&#123;</span><br><span class="line">                    mp[i][j]=mp[i][k]+mp[k][j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>接着计算可能产生的费用，mp[i] [j]/k+2作为map<int> <int> m1的键，遍历结点，找出i相应费用的最大距离，当从i到j的距离是费用的最大距离或者j是末端点，则把j放入i的res数组中</int></int></p>
<figure class="highlight plaintext"><figcaption><span>i</span></figcaption><table><tr><td class="code"><pre><span class="line">for(int i=1;i&lt;=n;i++)&#123;//对于每个站而言，寻找每个费用的最远距离,并将结果存入res中</span><br><span class="line">        map&lt;int,int&gt; m1;</span><br><span class="line">        for(int j=1;j&lt;=n;j++)&#123;</span><br><span class="line">            if(mp[i][j]!=INF&amp;&amp;mp[i][j]&gt;m1[mp[i][j]/k+2])&#123;</span><br><span class="line">                m1[mp[i][j]/k+2]=mp[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        for(int j=1;j&lt;=n;j++)&#123;</span><br><span class="line">            if(mp[i][j]==m1[mp[i][j]/k+2]||(i!=j&amp;&amp;mp[i][j]!=INF&amp;&amp;sta[j].ends==1))			&#123;</span><br><span class="line">               sta[i].res.push_back(j);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>输入森森打算出发的结点i，并且dfs i的res数组，把它能够到的结点打上标记</p>
<figure class="highlight plaintext"><figcaption><span>dfs(int i,int vis)&#123;</span></figcaption><table><tr><td class="code"><pre><span class="line">void dfs(int i,int vis)&#123;</span><br><span class="line">for(int j=0;j&lt;sta[i].res.size();j++)&#123;</span><br><span class="line">        int t=sta[i].res[j];</span><br><span class="line">        if(sta[t].visit!=vis)&#123;</span><br><span class="line">            sta[t].visit=vis;</span><br><span class="line">            dfs(t,vis);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>再次遍历结点，若标点为出发点，则将它输出即可</p>
<p>我太菜了</p>
<h2 id="L3-014-周游世界-30-分"><a href="#L3-014-周游世界-30-分" class="headerlink" title="L3-014 周游世界 (30 分)"></a>L3-014 周游世界 (30 分)</h2><p>dfs+回溯</p>
<p>用一个结构体数组存储一个结点的相邻节点和所属公司的信息。从一个结点出发，通过遍历这个结点编号的数组就可以得到它的下一个站点和公司信息，因为有的站点有可能是换乘站，所以它数组元素不止一个，注意双向存储，因为线路是双向的。dfs传递的参数站点数量，公司数量，以及它前一个公司的编号，因为要通过公司编号判断是否是换乘。如果不是换乘，则直接递归下一站，如果是换乘，则需要把换乘站（包括起点）压入一个数组中，当前公司编号也要压入数组中。本题是dfs递归+回溯，通过回溯不断更新最少站点和最少换乘站，可以找到最终结果。</p>
<p>最难的回溯部分</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> snum,<span class="keyword">int</span> cnum,<span class="keyword">int</span> com)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(a==en)&#123;</span><br><span class="line">		<span class="keyword">if</span>(stationnum&gt;snum||stationnum==snum&amp;&amp;cnum&lt;companynum)&#123;</span><br><span class="line">			stationnum=snum;</span><br><span class="line">			companynum=cnum;</span><br><span class="line">			path=t1;</span><br><span class="line">			companypath=t2;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> ;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;vec[a].<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(vis[vec[a][i].next])&#123;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		vis[vec[a][i].next]=<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span>(vec[a][i].company==com)&#123;</span><br><span class="line">			<span class="built_in">dfs</span>(vec[a][i].next,snum+<span class="number">1</span>,cnum,com);</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			t1.<span class="built_in">push_back</span>(a);</span><br><span class="line">			t2.<span class="built_in">push_back</span>(vec[a][i].company);</span><br><span class="line">			<span class="built_in">dfs</span>(vec[a][i].next,snum+<span class="number">1</span>,cnum+<span class="number">1</span>,vec[a][i].company);</span><br><span class="line">			t1.<span class="built_in">pop_back</span>();</span><br><span class="line">			t2.<span class="built_in">pop_back</span>();</span><br><span class="line">		&#125;</span><br><span class="line">		vis[vec[a][i].next]=<span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>这种算法应该写起来最简单了，咋一看像最短路问题，我太菜了</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/09/29/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<span id="more"></span>

<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo+icarus</title>
    <url>/2021/10/02/Hexo-icarus/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>之前的matery主题因为上传图片失败拖了几个月没有管，这次写了篇分治想重新上传，按照教程下载hexo-asset-image，其实已经下载成功了，却因为事隔太久看到warn误以为失败，加上预览的时候加载不到图片（当时不知道是它自己的bug），就根据错误瞎折腾。也不知道修改了什么，居然连渲染页面都不能用，当时只觉得很奇怪，也没有debug。我怀疑码云上的网站和仓库断开了，确定代码推送到仓库但网页还是以前一样。matery的风格也和本校同学冲撞了，而且看起来花里胡哨，干脆再做一个。然而因为权限问题删除原文件夹删了半天，把权限从everyone到本地账户改来改去都不行，最后直接移到program file删了。本来使用next，以为很简单的事预览的时候网页只显示</p>
<p><code>&#123;% extends ‘_layout.swig‘ %&#125; &#123;% import ‘_macro/post.swig‘ as post_template %&#125;</code></p>
<span id="more"></span>

<p>原来是hexo在5.0之后把swig给删除了需要自己手动安装：</p>
<p><code>npm install hexo-renderer-swig</code></p>
<p>之后分类页，标签页已经创建了然而网页还是404。干脆不搞了，对hexo产生了畏惧心理。之前没有总结建博客，现在认真记一些</p>
<h1 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h1><h2 id="预备环境"><a href="#预备环境" class="headerlink" title="预备环境"></a>预备环境</h2><ul>
<li>git</li>
<li>github账号</li>
<li>node.js以及npm</li>
</ul>
<h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p><code>npm install -g hexo-cli</code></p>
<p><code>cd</code>到想要放置项目的目录，打开git</p>
<p><code>hexo init blog</code> </p>
<p><code>cd</code> 到<code>blog</code></p>
<p><code>npm install</code></p>
<p>接着就可以<code>hexo s</code>看看效果了，打开<code>http://localhost:4000</code></p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/b26252eb40bc11f27ab2808484f82dd0.png"></p>
<p>hexo常用命令：</p>
<ul>
<li><p>清理下：<code>hexo clean</code></p>
</li>
<li><p>生成下：<code>hexo g</code></p>
</li>
<li><p>启动下：<code>hexo s</code></p>
</li>
<li><p>新建文章：<code>hexo new &quot;文件名&quot;</code></p>
</li>
<li><p>部署：<code>hexo d</code></p>
</li>
</ul>
<p>部署到github上：<code>npm install --save hexo-deployer-git</code></p>
<p>在blog目录下打开<code>_config.yml</code>，hexo全局配置文件，修改：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:risotoonero/risotoonero.github.io</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p>记得title和author写上自己的，然后<code>hexo d</code>就可以在github上看到效果。</p>
<h1 id="icarus主题"><a href="#icarus主题" class="headerlink" title="icarus主题"></a>icarus主题</h1><p><code>git clone https://github.com/ppoffice/hexo-theme-icarus themes/icarus </code></p>
<p>更改<code>_config.yml</code>中的theme，hexo升级后有点奇怪，它的配置文件在blog下的<code>_config.icarus.yml</code>。这样还不能马上看到效果，可能是icarus需要相关依赖：</p>
<p><img src="/2021/10/02/Hexo-icarus/0.jpg"></p>
<p><code> npm install --save bulma-stylus@0.8.0 hexo-component-inferno@^0.4.0 hexo-renderer-inferno@^0.1.3 inferno@^7.3.3 inferno-create-element@^7.3.3</code></p>
<p>安装成功的结果是这样的，别再搞乌龙了</p>
<p><img src="/2021/10/02/Hexo-icarus/1.jpg"></p>
<p>结果安装版本不对</p>
<p><img src="/2021/10/02/Hexo-icarus/2.jpg"></p>
<p><code>npm install --save hexo-component-inferno@^0.13.0</code></p>
<h2 id="上传图片"><a href="#上传图片" class="headerlink" title="上传图片"></a>上传图片</h2><p><code>npm install hexo-asset-image --save</code></p>
<p>修改<code>_config.yml</code>的<code>post_asset_folder</code>改为<code>true</code></p>
<p>在new了一篇文章后可以看到除了.md还有一个同名的文件夹，那是用来存图片的，文章中的图片路径名可以用<code>文件名/图片名</code>，就是在这里试来试去都不成功，心态都崩了，后面反应过来了是该死的文件路径出错了：</p>
<p><img src="/2021/10/02/Hexo-icarus/3.jpg"></p>
<p>io是什么呢，小编也很异或，上网一查</p>
<p><a href="https://github.com/xcodebuild/hexo-asset-image/issues/47">hexo-asset-image的bug</a></p>
<p>解决方案</p>
<p><img src="/2021/10/02/Hexo-icarus/4.jpg"></p>
<p><code>link = link.substring(beginPos, endPos) + &#39;/&#39; + appendLink</code></p>
<p><code>var endPos = link.length-1; </code></p>
<p>接下来就是主题配置的问题了，部分的配置信息如下</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Version of the Icarus theme that is currently used</span></span><br><span class="line"><span class="attr">version:</span> <span class="number">2.3</span><span class="number">.0</span></span><br><span class="line"><span class="comment"># 你的网站图标，可以搜索在线图标制作，并将其放在images文件夹中</span></span><br><span class="line"><span class="attr">favicon:</span> <span class="string">/images/favicons.ico</span></span><br><span class="line"><span class="comment"># Path or URL to RSS atom.xml</span></span><br><span class="line"><span class="attr">rss:</span> <span class="string">/atom.xml</span></span><br><span class="line"><span class="comment"># 显示在导航栏左侧的网站logo，同样可以自己制作</span></span><br><span class="line"><span class="attr">logo:</span> <span class="string">/images/gen.svg</span></span><br><span class="line"><span class="comment"># Open Graph metadata</span></span><br><span class="line"><span class="comment"># https://hexo.io/docs/helpers.html#open-graph</span></span><br><span class="line"><span class="attr">open_graph:</span></span><br><span class="line">    <span class="comment"># Facebook App ID</span></span><br><span class="line">    <span class="attr">fb_app_id:</span> </span><br><span class="line">    <span class="comment"># Facebook Admin ID</span></span><br><span class="line">    <span class="attr">fb_admins:</span> </span><br><span class="line">    <span class="comment"># Twitter ID</span></span><br><span class="line">    <span class="attr">twitter_id:</span> </span><br><span class="line">    <span class="comment"># Twitter site</span></span><br><span class="line">    <span class="attr">twitter_site:</span> </span><br><span class="line">    <span class="comment"># Google+ profile link</span></span><br><span class="line">    <span class="attr">google_plus:</span> </span><br><span class="line"><span class="comment">#  导航栏</span></span><br><span class="line"><span class="attr">navbar:</span></span><br><span class="line">    <span class="comment">#菜单（显示名称：对应文件夹）</span></span><br><span class="line">    <span class="attr">menu:</span></span><br><span class="line">        <span class="string">主页:</span> <span class="string">/</span></span><br><span class="line">        <span class="string">归档:</span> <span class="string">/archives</span></span><br><span class="line">        <span class="string">分类:</span> <span class="string">/categories</span></span><br><span class="line">        <span class="string">标签:</span> <span class="string">/tags</span></span><br><span class="line">        <span class="string">关于:</span> <span class="string">/about</span>   </span><br><span class="line">    <span class="comment"># 导航栏右侧图标链接</span></span><br><span class="line">    <span class="attr">links:</span></span><br><span class="line">        <span class="attr">My GitHub:</span></span><br><span class="line">            <span class="attr">icon:</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line">            <span class="attr">url:</span> <span class="string">&#x27;你的gityhub地址&#x27;</span></span><br><span class="line"><span class="comment"># Footer section link settings</span></span><br><span class="line"><span class="attr">footer:</span></span><br><span class="line">    <span class="comment"># 页脚图标链接</span></span><br><span class="line">    <span class="attr">links:</span></span><br><span class="line">        <span class="attr">Creative Commons:</span></span><br><span class="line">            <span class="attr">icon:</span> <span class="string">fab</span> <span class="string">fa-creative-commons</span></span><br><span class="line">            <span class="attr">url:</span> <span class="string">&#x27;https://creativecommons.org/&#x27;</span></span><br><span class="line">        <span class="attr">Attribution 4.0 International:</span></span><br><span class="line">            <span class="attr">icon:</span> <span class="string">fab</span> <span class="string">fa-creative-commons-by</span></span><br><span class="line">            <span class="attr">url:</span> <span class="string">&#x27;https://creativecommons.org/licenses/by/4.0/&#x27;</span></span><br><span class="line">        <span class="attr">Download on GitHub:</span></span><br><span class="line">            <span class="attr">icon:</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line">            <span class="attr">url:</span> <span class="string">&#x27;http://github.com/ppoffice/hexo-theme-icarus&#x27;</span></span><br><span class="line"><span class="comment"># 文章显示设置</span></span><br><span class="line"><span class="attr">article:</span></span><br><span class="line">    <span class="comment"># Code highlight theme</span></span><br><span class="line">    <span class="comment"># https://github.com/highlightjs/highlight.js/tree/master/src/styles</span></span><br><span class="line">    <span class="comment">#代码主题atom-one-light亮色，atom-one-dark暗色</span></span><br><span class="line">    <span class="attr">highlight:</span> <span class="string">atom-one-dark</span></span><br><span class="line">    <span class="comment"># 是否显示文章主图</span></span><br><span class="line">    <span class="attr">thumbnail:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># 是否显示估算阅读时间</span></span><br><span class="line">    <span class="attr">readtime:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 搜索插件设置</span></span><br><span class="line"><span class="comment"># http://ppoffice.github.io/hexo-theme-icarus/categories/Configuration/Search-Plugins</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">    <span class="comment"># Name of the search plugin</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">insight</span></span><br><span class="line"><span class="comment"># 评论插件设置</span></span><br><span class="line"><span class="comment"># http://ppoffice.github.io/hexo-theme-icarus/categories/Configuration/Comment-Plugins</span></span><br><span class="line"><span class="attr">comment:</span></span><br><span class="line">    <span class="comment">#可选valine，disqus（科学上网）等</span></span><br><span class="line">    <span class="comment"># Name of the comment plugin</span></span><br><span class="line">    <span class="comment">#type: valine</span></span><br><span class="line">    <span class="comment">#app_id: 不为空</span></span><br><span class="line">    <span class="comment">#app_key: 不为空</span></span><br><span class="line">    <span class="comment">#notify: true</span></span><br><span class="line">    <span class="comment">#verify: true</span></span><br><span class="line">    <span class="comment">#placeholder:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">disqus</span></span><br><span class="line">    <span class="attr">shortname:</span> <span class="string">不能为空</span></span><br><span class="line"><span class="comment"># 打赏功能</span></span><br><span class="line"><span class="comment"># http://ppoffice.github.io/hexo-theme-icarus/categories/Donation/</span></span><br><span class="line"><span class="attr">donate:</span></span><br><span class="line">    <span class="bullet">-</span></span><br><span class="line">        <span class="comment"># 阿里巴巴支付宝</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">alipay</span></span><br><span class="line">        <span class="comment"># 二维码图片</span></span><br><span class="line">        <span class="attr">qrcode:</span> <span class="string">&#x27;/images/honbao.PNG&#x27;</span></span><br><span class="line">    <span class="bullet">-</span></span><br><span class="line">        <span class="comment"># 微信</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">wechat</span></span><br><span class="line">        <span class="comment"># 二维码图片</span></span><br><span class="line">        <span class="attr">qrcode:</span> <span class="string">&#x27;/images/yjtp.png&#x27;</span></span><br><span class="line">    <span class="bullet">-</span></span><br><span class="line"><span class="comment"># 分享插件设置</span></span><br><span class="line"><span class="comment"># http://ppoffice.github.io/hexo-theme-icarus/categories/Configuration/Share-Plugins</span></span><br><span class="line"><span class="attr">share:</span></span><br><span class="line">    <span class="comment"># 插件类型，有多种，可选，自行百度</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">sharejs</span></span><br><span class="line"><span class="comment"># Sidebar settings.</span></span><br><span class="line"><span class="comment"># Please be noted that a sidebar is only visible when it has at least one widget</span></span><br><span class="line"><span class="attr">sidebar:</span></span><br><span class="line">    <span class="comment"># 左侧边栏设置</span></span><br><span class="line">    <span class="attr">left:</span></span><br><span class="line">        <span class="comment"># 是否不随页面滚动</span></span><br><span class="line">        <span class="comment"># http://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/make-a-sidebar-sticky-when-page-scrolls/</span></span><br><span class="line">        <span class="attr">sticky:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># 右侧边栏设置</span></span><br><span class="line">    <span class="attr">right:</span></span><br><span class="line">        <span class="comment"># 是否不随页面滚动</span></span><br><span class="line">        <span class="comment"># http://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/make-a-sidebar-sticky-when-page-scrolls/</span></span><br><span class="line">        <span class="attr">sticky:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># 边栏小部件设置</span></span><br><span class="line"><span class="comment"># http://ppoffice.github.io/hexo-theme-icarus/categories/Widgets/</span></span><br><span class="line"><span class="attr">widgets:</span></span><br><span class="line">    <span class="bullet">-</span></span><br><span class="line">        <span class="comment"># 个人信息</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">profile</span></span><br><span class="line">        <span class="comment"># 部件位置（左）</span></span><br><span class="line">        <span class="attr">position:</span> <span class="string">left</span></span><br><span class="line">        <span class="comment"># 作者名（字符串）</span></span><br><span class="line">        <span class="attr">author:</span> <span class="string">飞鱼</span></span><br><span class="line">        <span class="comment"># 作者身份描述（字符串）</span></span><br><span class="line">        <span class="attr">author_title:</span> <span class="string">Student</span></span><br><span class="line">        <span class="comment"># 作者当前居住地</span></span><br><span class="line">        <span class="attr">location:</span> <span class="string">China,Fujian</span></span><br><span class="line">        <span class="comment"># 头像（可用本地图片或网络图片链接）</span></span><br><span class="line">        <span class="attr">avatar:</span> <span class="string">&#x27;/images/ava.png&#x27;</span></span><br><span class="line">        <span class="comment"># Email address for the Gravatar to be shown in the profile widget</span></span><br><span class="line">        <span class="attr">gravatar:</span> </span><br><span class="line">        <span class="comment"># 关注我的链接，可设为你的GitHub主页</span></span><br><span class="line">        <span class="attr">follow_link:</span> <span class="string">&#x27;https://github.com/yourname&#x27;</span></span><br><span class="line">        <span class="comment"># 个人介绍部件底部图标社交链接</span></span><br><span class="line">        <span class="attr">social_links:</span></span><br><span class="line">            <span class="attr">Github:</span></span><br><span class="line">                <span class="attr">icon:</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line">                <span class="attr">url:</span> <span class="string">&#x27;https://github.com/yourname&#x27;</span></span><br><span class="line">            <span class="attr">Facebook:</span></span><br><span class="line">                <span class="attr">icon:</span> <span class="string">fab</span> <span class="string">fa-facebook</span></span><br><span class="line">                <span class="attr">url:</span> <span class="string">&#x27;https://facebook.com&#x27;</span></span><br><span class="line">            <span class="attr">Twitter:</span></span><br><span class="line">                <span class="attr">icon:</span> <span class="string">fab</span> <span class="string">fa-twitter</span></span><br><span class="line">                <span class="attr">url:</span> <span class="string">&#x27;https://twitter.com/yourname&#x27;</span></span><br><span class="line">            <span class="attr">RSS:</span></span><br><span class="line">                <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-rss</span></span><br><span class="line">                <span class="attr">url:</span> <span class="string">/</span></span><br><span class="line">    <span class="bullet">-</span></span><br><span class="line">        <span class="comment"># Widget name</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">toc</span></span><br><span class="line">        <span class="comment"># Where should the widget be placed, left or right</span></span><br><span class="line">        <span class="attr">position:</span> <span class="string">left</span></span><br><span class="line">    <span class="bullet">-</span></span><br><span class="line">        <span class="comment"># 分类</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">category</span></span><br><span class="line">        <span class="comment"># 位置指定</span></span><br><span class="line">        <span class="attr">position:</span> <span class="string">left</span></span><br><span class="line">    <span class="bullet">-</span></span><br><span class="line">        <span class="comment"># 标签云</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">tagcloud</span></span><br><span class="line">        <span class="comment"># 位置</span></span><br><span class="line">        <span class="attr">position:</span> <span class="string">right</span></span><br><span class="line">    <span class="bullet">-</span></span><br><span class="line">        <span class="comment"># 近期文章</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">recent_posts</span></span><br><span class="line">        <span class="comment"># 位置</span></span><br><span class="line">        <span class="attr">position:</span> <span class="string">left</span></span><br><span class="line">    <span class="bullet">-</span></span><br><span class="line">        <span class="comment"># 归档</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">archive</span></span><br><span class="line">        <span class="comment"># Where should the widget be placed, left or right</span></span><br><span class="line">        <span class="attr">position:</span> <span class="string">right</span></span><br><span class="line">    <span class="bullet">-</span></span><br><span class="line">        <span class="comment"># 标签</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">tag</span></span><br><span class="line">        <span class="comment"># Where should the widget be placed, left or right</span></span><br><span class="line">        <span class="attr">position:</span> <span class="string">right</span></span><br><span class="line">    <span class="bullet">-</span></span><br><span class="line">        <span class="comment"># 外部链接</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">links</span></span><br><span class="line">        <span class="comment"># Where should the widget be placed, left or right</span></span><br><span class="line">        <span class="attr">position:</span> <span class="string">left</span></span><br><span class="line">        <span class="comment"># Links to be shown in the links widget</span></span><br><span class="line">        <span class="attr">links:</span></span><br><span class="line">            <span class="attr">Google:</span> <span class="string">&#x27;https://google.com&#x27;</span></span><br><span class="line">            <span class="attr">Baidu:</span> <span class="string">&#x27;https://baidu.com&#x27;</span></span><br></pre></td></tr></table></figure>

<p>注意图片一定要放在theme的img下才能找到</p>
<h2 id="页面点击出现爱心"><a href="#页面点击出现爱心" class="headerlink" title="页面点击出现爱心"></a>页面点击出现爱心</h2><p>在<code>\blog\themes\icarus\source\js</code>下，新建<code>clicklove.js</code>，写入以下代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">e,t,a</span>)</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        c(<span class="string">&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;</span>),</span><br><span class="line">        o(),</span><br><span class="line">        r()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;d.length;e++)</span><br><span class="line">            d[e].alpha&lt;=<span class="number">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class="number">1</span>)):(d[e].y--,d[e].scale+=<span class="number">.004</span>,d[e].alpha-=<span class="number">.013</span>,d[e].el.style.cssText=<span class="string">&quot;left:&quot;</span>+d[e].x+<span class="string">&quot;px;top:&quot;</span>+d[e].y+<span class="string">&quot;px;opacity:&quot;</span>+d[e].alpha+<span class="string">&quot;;transform:scale(&quot;</span>+d[e].scale+<span class="string">&quot;,&quot;</span>+d[e].scale+<span class="string">&quot;) rotate(45deg);background:&quot;</span>+d[e].color+<span class="string">&quot;;z-index:99999&quot;</span>);</span><br><span class="line">        requestAnimationFrame(r)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> t=<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> e.onclick&amp;&amp;e.onclick;</span><br><span class="line">        e.onclick=<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">            t&amp;&amp;t(),i(e)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> a=t.createElement(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">            a.className=<span class="string">&quot;heart&quot;</span>,d.push(&#123;<span class="attr">el</span>:a,<span class="attr">x</span>:e.clientX-<span class="number">5</span>,<span class="attr">y</span>:e.clientY-<span class="number">5</span>,<span class="attr">scale</span>:<span class="number">1</span>,<span class="attr">alpha</span>:<span class="number">1</span>,<span class="attr">color</span>:s()&#125;),t.body.appendChild(a)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> a=t.createElement(<span class="string">&quot;style&quot;</span>);a.type=<span class="string">&quot;text/css&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            a.appendChild(t.createTextNode(e))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span>(t)&#123;</span><br><span class="line">            a.styleSheet.cssText=e</span><br><span class="line">        &#125;</span><br><span class="line">        t.getElementsByTagName(<span class="string">&quot;head&quot;</span>)[<span class="number">0</span>].appendChild(a)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span><span class="string">&quot;rgb(&quot;</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">&quot;,&quot;</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">&quot;,&quot;</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">&quot;)&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> d=[];</span><br><span class="line">    e.requestAnimationFrame=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">setTimeout</span>(e,<span class="number">1e3</span>/<span class="number">60</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;(),</span><br><span class="line">    n()</span><br><span class="line">&#125;</span><br><span class="line">(<span class="built_in">window</span>,<span class="built_in">document</span>);</span><br></pre></td></tr></table></figure>

<p>修改<code>layout.ejs</code>，找到<code>\blog\themes\icarus\layout\layout.ejs</code>,添加：</p>
<script src="js/clicklove.js"></script>
<h2 id="文章目录"><a href="#文章目录" class="headerlink" title="文章目录"></a>文章目录</h2><p>在文章开头加上<code>toc: true</code></p>
<h2 id="板娘"><a href="#板娘" class="headerlink" title="板娘"></a>板娘</h2><p>板娘很奇怪，我想要只猫，但换了两个模型都是那个女孩，匪夷所思。</p>
<p><code>npm install hexo-helper-live2d --save</code></p>
<p>在主题配置文件加上一段</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>                                   <span class="comment">#开启看板娘</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">log:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-tororo</span>     <span class="comment">#指定模型任务</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span>                              <span class="comment">#显示位置</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">200</span>                                   <span class="comment">#模型宽度</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">400</span>                                  <span class="comment">#模型高度</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h2 id="评论插件"><a href="#评论插件" class="headerlink" title="评论插件"></a>评论插件</h2><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">type:</span> <span class="string">valine</span></span><br><span class="line"><span class="attr">app_id:</span> </span><br><span class="line">   <span class="attr">app_key:</span> </span><br><span class="line">   <span class="attr">notify:</span> <span class="literal">true</span></span><br><span class="line">   <span class="attr">verify:</span> <span class="literal">true</span></span><br><span class="line">   <span class="attr">placeholder:</span></span><br></pre></td></tr></table></figure>

<p>遇到这些报错就是主题文件配置错误，应该要自己找到</p>
<p><img src="/2021/10/02/Hexo-icarus/5.jpg"></p>
<h1 id="我遇到的问题"><a href="#我遇到的问题" class="headerlink" title="我遇到的问题"></a>我遇到的问题</h1><ol>
<li>把widgets放在右边无效，只能全部在左边</li>
<li><code>article</code>的<code>thumbnail: true</code>无效，文章<code>thumbnail</code>的路径设为<code>/2021/09/30/9-30关于排序和分治之题/0.jpg</code>才访问得到，只有缩略图，主页的文章封面没有，更不用说banner连图片都没有。想着每次写文章都要准备一张封面挺麻烦，而且博客简洁点就好，就算了。</li>
</ol>
<p>public文件夹是网页呈现的东西</p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>10-5动规</title>
    <url>/2021/10/05/10-5%E5%8A%A8%E8%A7%84/</url>
    <content><![CDATA[<h2 id="Leetcode传递信息"><a href="#Leetcode传递信息" class="headerlink" title="Leetcode传递信息"></a>Leetcode传递信息</h2><p>这题乍看之下和pta出租游艇很像，其实不然。主要是多了个k轮传递的限制</p>
<p><img src="/2021/10/05/10-5%E5%8A%A8%E8%A7%84/1.png"></p>
<p>代码如下，时间复杂度100左右</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> m[<span class="number">100</span>][<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">100</span>][<span class="number">100</span>];</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">numWays</span><span class="params">(<span class="keyword">int</span> n, vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;&amp; relation, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;relation.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            a[relation[i][<span class="number">0</span>]][relation[i][<span class="number">1</span>]]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=k;j++)&#123;          </span><br><span class="line">                <span class="keyword">if</span>(j==<span class="number">1</span>)&#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> r=<span class="number">0</span>;r&lt;n;r++)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(a[<span class="number">0</span>][r]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                            m[r][j]=<span class="number">1</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> p=<span class="number">0</span>;p&lt;n;p++)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(m[p][j<span class="number">-1</span>]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                            <span class="keyword">for</span>(<span class="keyword">int</span> r=<span class="number">0</span>;r&lt;n;r++)&#123;</span><br><span class="line">                                <span class="keyword">if</span>(a[p][r]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                                    <span class="keyword">if</span>(m[r][j]==<span class="number">0</span>)&#123;</span><br><span class="line">                                        m[r][j]=m[p][j<span class="number">-1</span>];</span><br><span class="line">                                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                                        m[r][j]+=m[p][j<span class="number">-1</span>];</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    </span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> m[n<span class="number">-1</span>][k];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="pta出租游艇"><a href="#pta出租游艇" class="headerlink" title="pta出租游艇"></a>pta出租游艇</h2><p>长江游艇俱乐部在长江上设置了n个游艇出租站1，2，…，n。游客可在这些游艇出租站租用游艇，并在下游的任何一个游艇出租站归还游艇。游艇出租站i到游艇出租站j之间的租金为r(i,j),1&lt;=i&lt;j&lt;=n。试设计一个算法，计算出从游艇出租站1 到游艇出租站n所需的最少租金。</p>
<p>第1 行中有1 个正整数n（n&lt;=200），表示有n个游艇出租站。接下来的第1到第n-1 行，第i行表示第i站到第i+1站,第i+2站, … , 第n站的租金。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">5 15</span><br><span class="line">7</span><br></pre></td></tr></table></figure>

<p>相较于上题，这题用一维数组存储值就好了，m[3]就遍历1、2，用m[1]+1到3的钱，m[2]+2到3的钱，选小的那个。自底向上算</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">2000</span>][<span class="number">2000</span>];</span><br><span class="line"><span class="keyword">int</span> m[<span class="number">2000</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n;</span><br><span class="line">	cin&gt;&gt;n;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">			cin&gt;&gt;a[i][j];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		m[i]=INT_MAX;</span><br><span class="line">		<span class="keyword">int</span> u=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;i;k++)&#123;			</span><br><span class="line">			<span class="keyword">if</span>((a[k][i]&gt;<span class="number">0</span>&amp;&amp;m[k]&gt;<span class="number">0</span>&amp;&amp;k&gt;<span class="number">1</span>)||(k==<span class="number">1</span>&amp;&amp;a[k][i]&gt;<span class="number">0</span>))&#123;</span><br><span class="line">				u=m[k]+a[k][i];</span><br><span class="line">				<span class="keyword">if</span>(u&lt;m[i])&#123;</span><br><span class="line">					m[i]=u;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(u==<span class="number">0</span>)&#123;</span><br><span class="line">				m[i]=<span class="number">0</span>;</span><br><span class="line">			&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	cout&lt;&lt;m[n];	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="pta矩阵链"><a href="#pta矩阵链" class="headerlink" title="pta矩阵链"></a>pta矩阵链</h2><p>动态规划有两个特点：最优子结构和重叠子问题。这道题的最优子结构是，要寻找矩阵i到j的最小乘法次数，可以在i~j中找到一个k，左边矩阵i到k的已经是一个最优序列，右边k+1到j也是一个最优序列，两边的乘法次数之和加上两个子问题的乘法次数(pi  *  pk * pj)就是i到j的最优解。而i到k，k+1到j也可以用递归算法求得。<br>$$<br>m[i][j]=<br>    \begin{cases}<br>        0, &amp; \text{if $i$ =$j$}\<br>        \min \limits_{i&lt;=k&lt;j}{m[i][k]+m[k+1][j]+pi<em>pk</em>pj} &amp; \text{if $i$ &lt; $j$}<br>    \end{cases}<br>$$</p>
<p>遍历k便得</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1000</span>];</span><br><span class="line"><span class="keyword">int</span> m[<span class="number">1000</span>][<span class="number">1000</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	cin&gt;&gt;n;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		cin&gt;&gt;a[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		m[i][i]=<span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(i&lt;j)&#123;</span><br><span class="line">				m[i][j]=m[i][i]+m[i+<span class="number">1</span>][j]+a[i<span class="number">-1</span>]*a[i]*a[j];</span><br><span class="line">				<span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)&#123;</span><br><span class="line">					m[i][j]=<span class="built_in">min</span>(m[i][j],m[i][k]+m[k+<span class="number">1</span>][j]+a[i<span class="number">-1</span>]*a[j]*a[k]);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;		</span><br><span class="line">	&#125;</span><br><span class="line">	cout&lt;&lt;m[<span class="number">1</span>][n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="leetcode连续子数组的最大和"><a href="#leetcode连续子数组的最大和" class="headerlink" title="leetcode连续子数组的最大和"></a>leetcode连续子数组的最大和</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入: nums = [-2,1,-3,4,-1,2,1,-5,4]</span><br><span class="line">输出: 6</span><br><span class="line">解释: 连续子数组 [4,-1,2,1] 的和最大，为 6。</span><br></pre></td></tr></table></figure>

<p>这道题碰到很多次了，开局把max设为无穷小，<code>u=0</code>，遍历数组，<code>u+=nums[i]</code>,如果u比max大，赋值。如果<code>u&lt;0</code>,<code>u=0</code></p>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>动态规划</tag>
      </tags>
  </entry>
</search>
